CodeGen Release Procedure (GitHub)
==================================

This document defines the procedure for distributing a new release of CodeGen
on GitHub.

1.	Complete all development for the new version.

2.  TEST TEST TEST!!!

3.  Commit all software changes to the local repo (git commit)

5.  Push the software changes to the GitHub repo (git push)

6.  Update the documentation (new features, release notes, version number,
    release date, etc.).

7.  Build new HTML help and Web help files.

8.  Commit the documentation changes to the local repo with a comment of
    "Updated documentation ready for X.Y.Z release" (git commit)

9.  Push the changes to the GitHub repo (git push).

10. Build everything in RELEASE mode.

11. Build a new installation.

12. Install the new version and run as many tests as possible.

13. Copy the installer to the release history folder.

14. Do the release on GitHub.

15. Upload web help files to the web site.

16. Bump the version number in CurrentRelease.xml

17. Commit the changes to CurrentRelease.xml to the local git repo with a
    comment of "Announced version X.Y.Z to check for update." (git commit)

18. Push the changes to the GitHub repo (git push).

--------------------------------------------------------------------------------
PREPARE TRUNK FOR NEXT VERSION

1.  Edit CodeGenEngine\codegen.def and bump the version number.

2.  Edit CodeGenSetup\product.wxs
     - Bump the product version number string
	 - Generate and implement a new product id GUID (DO NOT change the
	   UpgradeCode GUID)

3.  Use the SetAssemblyFileVersion utility to bump the version number in all
    AssemblyInfo files

4.  Add a new section to the Release notes section of the documentation and
    build a new HTML help file.

5.  Commit the version number changes to the local repo with a comment of 
    "Bumped version to X.Y.Z for next release." (git commit).

6.  Push the changes to the GitHub repo (git push).

7.  Create a new folder under releases and record the new GUID in a text file.

--------------------------------------------------------------------------------
UPDATE GITHUB ISSUES

1.  If there was a beta release on CodeGitHub that relates to this release,
    hide it from the public.

2.  Update any "Issues" that are affected by the release.

