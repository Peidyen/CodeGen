
import System
import System.Collections.Generic
import System.ComponentModel
import System.Data
import System.Drawing
import System.Windows.Forms

namespace CodeConverter

    public partial class OptionsForm extends System.Windows.Forms.Form
    
        public method OptionsForm
        proc
            this.InitializeComponent()
        endmethod
		
		private method OptionsForm_Load, void
			sender, @object 
			e, @System.EventArgs 
		proc

			data fileExtension, String
			if (Properties.Settings.Default.AppSettings.SourceExtensions.Count > 0)
			begin
				foreach fileExtension in Properties.Settings.Default.AppSettings.SourceExtensions
					lstExtensions.Items.Add(fileExtension)
				lstExtensions.SelectedIndex = 0
			end
			txtExtension.Focus()

			chkLoadBuiltinSearchTools.Checked = Properties.Settings.Default.AppSettings.LoadBuiltinSearchTools
			chkLoadBuiltinConversionTools.Checked = Properties.Settings.Default.AppSettings.LoadBuiltinConversionTools

		endmethod
		
		private method btnClose_Click, void
			sender, @object 
			e, @System.EventArgs 
		proc
			Properties.Settings.Default.AppSettings.LoadBuiltinSearchTools = chkLoadBuiltinSearchTools.Checked
			Properties.Settings.Default.AppSettings.LoadBuiltinConversionTools = chkLoadBuiltinConversionTools.Checked
			Properties.Settings.Default.Save()
			this.Close()
		endmethod
		
		private method txtExtension_TextChanged, void
			sender, @object 
			e, @System.EventArgs 
		proc
			data candidateExtension = txtExtension.Text.ToLower().Trim()
			btnAddExtension.Enabled = candidateExtension.Length >= 3 && candidateExtension.StartsWith("*.") && !lstExtensions.Items.Contains(candidateExtension)
		endmethod
		
		private method btnAddExtension_Click, void
			sender, @object 
			e, @System.EventArgs 
		proc
			data newExtension = txtExtension.Text.ToLower().Trim()
			lstExtensions.Items.Add(newExtension)
			Properties.Settings.Default.AppSettings.SourceExtensions.Add(newExtension)
			Properties.Settings.Default.Save()
			txtExtension.Clear()
			txtExtension.Focus()
		endmethod
		
		
		private method lstExtensions_SelectedIndexChanged, void
			sender, @object 
			e, @System.EventArgs 
		proc
			btnRemoveExtension.Enabled = lstExtensions.SelectedIndex != -1
		endmethod
		
		
		private method btnRemoveExtension_Click, void
			sender, @object 
			e, @System.EventArgs 
			endparams
		proc
			data removedIndex, int, lstExtensions.SelectedIndex
			data removedExtension = ^as(lstExtensions.SelectedItem, String)

			lstExtensions.Items.Remove(lstExtensions.SelectedItem)

			Properties.Settings.Default.AppSettings.SourceExtensions.Remove(removedExtension)
			Properties.Settings.Default.Save()

			if (lstExtensions.Items.Count>0)
			begin
				if (removedIndex <= (lstExtensions.Items.Count-1)) then
					lstExtensions.SelectedIndex = removedIndex
				else
					lstExtensions.SelectedIndex = removedIndex-1
			end

			txtExtension.Focus()

		endmethod
		
    endclass

endnamespace
