
import System
import System.Collections.Generic
import System.IO
import CodeConverterInterface

.array 0

namespace CodeConverter.BuiltIn.Convert
	
	public class ImportSynergySelect implements IConversionTool
	
		public readonly property Description, string, "import Synergex.SynergyDE.Select"

		public method DoConvert, ConversionResult
			required in    fileSpec, String
			required inout allFileData, String
			required inout sourceLines, @List<string>
			required out   changeCount, int
		proc
			if (allFileData.ToLower().Contains("import synergex.synergyde.select"))
				mreturn ConversionResult.NoChanges

			data ix, int, -1
			while ((ix += 1) < sourceLines.Count)
			begin
				if (String.IsNullOrWhiteSpace(sourceLines[ix]) || sourceLines[ix].StartsWith(";"))
					nextloop

				;;Found the first non-blank, non-header comment line
				sourceLines.Insert(ix,"")
				sourceLines.Insert(ix,"import Synergex.SynergyDE.Select")
				changeCount += 1
				exitloop
			end

			mreturn (changeCount == 0) ? ConversionResult.NoChanges : ConversionResult.SourceLinesModified

		endmethod

	endclass

endnamespace
