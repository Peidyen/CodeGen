
import System
import System.Collections.Generic
import System.Text
import System.Text.RegularExpressions

namespace CodeConverterInterface

	public class StringTools

		public static method CondenseWhiteSpace, String
			required in inString, String
			endparams
		proc
			data regexp, @Regex, new Regex("\s+",RegexOptions.None)
			mreturn regexp.Replace(inString," ")
		endmethod
	
		public static method CondenseWhiteSpaceAndTrim, String
			required in inString, String
			endparams
		proc
			mreturn CondenseWhiteSpace(inString).Trim()
		endmethod
		
		public static method RemoveWhiteSpace, String
			required in inString, String
			endparams
		proc
			data regexp, @Regex, new Regex("\s+",RegexOptions.None)
			mreturn regexp.Replace(inString,"")
		endmethod
		
		public static method EnsureSpaceBeforeOpenParen, String
			required in inString, String
			endparams
		proc
			data outString, String
			data lastChar, String
			data ix, int, -1
			while ((ix+=1)<inString.Length)
			begin
				data thisCharacter, String, inString.Substring(ix,1)
				if (thisCharacter == "(")
				begin
					if ((lastChar==^null) || (lastChar != " "))
						outString += " "
				end
				outString += thisCharacter
			end
			mreturn outString
		endmethod

	endclass

endnamespace
